trigger:
  branches:
      include:
        - master
  paths:
      include:
        - src/*


variables:
  buildConfiguration: 'Release'


jobs:
  - job: ARM
    dependsOn: []
    pool:
      vmImage: windows-latest
    steps:
    - task: AzSKARMTemplateChecker@4
      enabled: true
      inputs:
        ARMTemplateFilePath: 'infra/OWP-Portal-Deployment/OWP-Portal-Deployment/azuredeploy.json'
        ARMTemplateParameterFilePath: 'infra/OWP-Portal-Deployment/OWP-Portal-Deployment/azuredeploy.parametersjson'

  - job: Database
    dependsOn: []
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: MSBuild@1
      displayName: Database DACPAC build
      inputs:
        solution: 'src/OwpPortal.Database/OwpPortal.Database.sqlproj'
        msbuildArguments: '/p:OutDir=$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      displayName: Publish binaries
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

  - job: Binaries
    pool:
      name: 'MyLenovoP1'
    steps:
    - task: SonarQubePrepare@4
      enabled: true
      inputs:
        SonarQube: 'localhostSonarqube'
        scannerMode: 'MSBuild'
        projectKey: 'onboarding'
        projectName: 'onboarding'
        projectVersion: '$(Build.BuildId)'


    - task: GitVersion@5
      inputs:
        runtime: 'core'
        configFilePath: 'gitversion.yml'

    - task: DotNetCoreCLI@2
      displayName: Restore packages
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
        feedsToUse: 'select'


    - task: DotNetCoreCLI@2
      displayName: Build source code
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration) /p:AssemblyVersion=$(GitVersion.SemVer)'

    - task: SonarQubeAnalyze@4
      enabled: true

    - task: WhiteSource Bolt@19
      enabled: :false
      inputs:
        cwd: 'src'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: 'src/OwpPortal.UnitTests/OwpPortal.UnitTests.csproj'
        testRunTitle: 'Unit Testing' 

    - task: DotNetCoreCLI@2
      displayName: Publish ASP.Net Core WebApp
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: Publish binaries
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

    - task: PublishBuildArtifacts@1
      displayName: Publish IaC
      inputs:
        PathtoPublish: 'infra/OWP-Portal-Deployment/OWP-Portal-Deployment'
        ArtifactName: 'drop-IaC'
        publishLocation: 'Container'


  - job: Selenium
    dependsOn: []
    displayName: Build UI Tests
    pool:
      name: Hosted Windows 2019 with VS2019 
      vmImage: 'windows-2019'
      demands: msbuild

    steps:

    - task: DotNetCoreCLI@2
      displayName: Restore UI tests
      inputs:
        command: 'restore'
        projects: '**/OwpPortal.UITests.csproj'
        feedsToUse: 'select'
    
    - task: DotNetCoreCLI@2
      displayName: Build UI tests
      inputs:
        command: 'build'
        projects: '**/OwpPortal.UITests.csproj'
        arguments: '--output $(Build.ArtifactStagingDirectory)'

    

    - task: PublishBuildArtifacts@1
      displayName: Publish UI tests
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'ui-tests'
        publishLocation: 'Container'
