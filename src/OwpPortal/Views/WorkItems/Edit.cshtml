@model owp_web.Models.WorkItemViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

     var imgSrc = string.Empty;
    var imageIncluded = Model.WorkItem.Image != null;
    if (imageIncluded)
    {
        var base64 = Convert.ToBase64String(Model.WorkItem.Image);
        imgSrc = String.Format("data:image/gif;base64,{0}", base64);
    }
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>

    <h2 class="mt-3">Edit Work Item @Model.WorkItem.WorkItemId</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="WorkItem.WorkItemId" />
            <div class="form-group">
                <label asp-for="WorkItem.Description" class="control-label"></label>
                <input asp-for="WorkItem.Description" class="form-control" />
                <span asp-validation-for="WorkItem.Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="WorkItem.Address" class="control-label"></label>
                <input asp-for="WorkItem.Address" class="form-control" />
                <span asp-validation-for="WorkItem.Address" class="text-danger"></span>
            </div>

            <input type="hidden" asp-for="WorkItem.Latitude" class="form-control" />
            <input type="hidden" asp-for="WorkItem.Longitude" class="form-control" />

            <div class="form-group">
                <label asp-for="WorkItem.WorkItemType" class="control-label"></label>
                <select asp-for="WorkItem.WorkItemType" class="form-control" asp-items="Html.GetEnumSelectList(typeof(WorkItemTypes))"></select>
                <span asp-validation-for="WorkItem.WorkItemType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="WorkItem.Status" class="control-label"></label>
                <select asp-for="WorkItem.Status" class="form-control" asp-items="Html.GetEnumSelectList(typeof(WorkItemStatus))"></select>
                <span asp-validation-for="WorkItem.Status" class="text-danger"></span>
            </div>

            @if (imageIncluded)
            {
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.WorkItem.Image)
                </dt>
                <dd class="col-sm-10">
                    <img width="300" height="300" src="@imgSrc" />
                </dd>
            }

            @{
                List<Worker> workers = await Model.GetWorkersListAsync();
                SelectList AssignedToList = new SelectList(workers, "AssignmentId", "PrincipalDisplayName", Model.WorkItem.AssignedTo);
            }

            <div class="form-group">
                <label asp-for="WorkItem.AssignedTo" class="control-label"></label>
                <select asp-for="WorkItem.AssignmentId" class="form-control" asp-items="AssignedToList"></select>
                <span asp-validation-for="WorkItem.AssignedTo" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="WorkItem.WorkItemPriority" class="control-label h6">Priority</label>
                <select asp-for="WorkItem.WorkItemPriority" class="form-control" asp-items="Html.GetEnumSelectList(typeof(WorkItemPriority))">
                    <option selected="selected" value="">-- Select a priority --</option>
                </select>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a role="button" class="btn btn-secondary" asp-action="Index">Back to List</a>
            </div>
        </form>
    </div>
</div>

 <hr/>


<div class="row  float-right">
    <div class="record-updated-metrics">
        <span class="col-sm-2 font-weight-bold">Coordinates</span>
        <span class="col-sm-2">
            @Html.DisplayFor(model => model.WorkItem.Latitude), @Html.DisplayFor(model => model.WorkItem.Longitude)
        </span>

        <span class="col-sm-2 font-weight-bold">
            @Html.DisplayNameFor(model => model.WorkItem.CreatedOn)
        </span>
        <span class="col-sm-2">
            @Html.DisplayFor(model => model.WorkItem.CreatedOn)
        </span>
        <span class="col-sm-2 font-weight-bold">
            @Html.DisplayNameFor(model => model.WorkItem.LastChangedOn)
        </span>
        <span class="col-sm-2">
            @Html.DisplayFor(model => model.WorkItem.LastChangedOn)
        </span>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
</body>
</html>
